version: '3.8'

services:
  # Main API Server
  mutumwa-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: mutumwa-server
    depends_on:
      - mutumwa-postgres
      - mutumwa-redis
    environment:
      - SERVICE_FQDN_SERVER=/api
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@mutumwa-postgres:5432/${POSTGRES_DB:-mutumwa}
      - DB_HOST=mutumwa-postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-mutumwa}
      - DB_USER=${SERVICE_USER_POSTGRES}
      - DB_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - REDIS_HOST=mutumwa-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - JWT_SECRET=${JWT_SECRET:-${SERVICE_PASSWORD_64_SERVER}}
      - API_PORT=3001
    volumes:
      - mutumwa-server-uploads:/app/uploads:rw
      - mutumwa-server-logs:/app/logs:rw
    restart: unless-stopped

  # Document Collector Service
  mutumwa-collector:
    build:
      context: ./collector
      dockerfile: Dockerfile
    container_name: mutumwa-collector
    depends_on:
      - mutumwa-postgres
      - mutumwa-redis
      - mutumwa-server
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@mutumwa-postgres:5432/${POSTGRES_DB:-mutumwa}
      - DB_HOST=mutumwa-postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-mutumwa}
      - DB_USER=${SERVICE_USER_POSTGRES}
      - DB_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - REDIS_HOST=mutumwa-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - SERVER_URL=http://mutumwa-server:3001
      - COLLECTOR_PORT=3002
    volumes:
      - mutumwa-collector-storage:/app/storage:rw
      - mutumwa-collector-uploads:/app/uploads:rw
      - mutumwa-collector-tmp:/app/tmp:rw
    restart: unless-stopped

  # Frontend Application
  mutumwa-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mutumwa-frontend
    depends_on:
      - mutumwa-server
    environment:
      - SERVICE_FQDN_FRONTEND=/
      - NODE_ENV=${NODE_ENV:-production}
      - NEXT_PUBLIC_API_URL=${SERVICE_URL_SERVER}/api
      - NEXT_PUBLIC_COLLECTOR_URL=${SERVICE_URL_COLLECTOR}
      - API_URL=http://mutumwa-server:3001
      - COLLECTOR_URL=http://mutumwa-collector:3002
    restart: unless-stopped

  # PostgreSQL Database
  mutumwa-postgres:
    image: 'postgres:15-alpine'
    container_name: mutumwa-postgres
    environment:
      - POSTGRES_ROOT_PASSWORD=${SERVICE_PASSWORD_POSTGRESROOT}
      - POSTGRES_DB=${POSTGRES_DB:-mutumwa}
      - POSTGRES_USER=${SERVICE_USER_POSTGRES}
      - POSTGRES_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - mutumwa-postgres-data:/var/lib/postgresql/data:rw
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SERVICE_USER_POSTGRES} -d ${POSTGRES_DB:-mutumwa}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache
  mutumwa-redis:
    image: 'redis:7.2.4-alpine'
    container_name: mutumwa-redis
    command: >
      redis-server
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --maxmemory-samples 5
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - mutumwa-redis-data:/data:rw
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Database Migration Runner (runs once)
  mutumwa-migrations:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: mutumwa-migrations
    depends_on:
      mutumwa-postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@mutumwa-postgres:5432/${POSTGRES_DB:-mutumwa}
      - DB_HOST=mutumwa-postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-mutumwa}
      - DB_USER=${SERVICE_USER_POSTGRES}
      - DB_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
    command: ["npm", "run", "migration:up"]
    restart: "no"

  # Background Worker for Document Processing
  mutumwa-worker:
    build:
      context: ./collector
      dockerfile: Dockerfile
    container_name: mutumwa-worker
    depends_on:
      - mutumwa-postgres
      - mutumwa-redis
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgresql://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@mutumwa-postgres:5432/${POSTGRES_DB:-mutumwa}
      - DB_HOST=mutumwa-postgres
      - DB_PORT=5432
      - DB_NAME=${POSTGRES_DB:-mutumwa}
      - DB_USER=${SERVICE_USER_POSTGRES}
      - DB_PASSWORD=${SERVICE_PASSWORD_POSTGRES}
      - REDIS_HOST=mutumwa-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - WORKER_TYPE=document-processor
    volumes:
      - mutumwa-collector-storage:/app/storage:rw
      - mutumwa-collector-uploads:/app/uploads:rw
      - mutumwa-collector-tmp:/app/tmp:rw
    command: ["node", "worker.js"]
    restart: unless-stopped

networks:
  default:
    name: mutumwa-network

volumes:
  # Database volumes
  mutumwa-postgres-data:
    driver: local
  mutumwa-redis-data:
    driver: local
  
  # Application volumes
  mutumwa-server-uploads:
    driver: local
  mutumwa-server-logs:
    driver: local
  mutumwa-collector-storage:
    driver: local
  mutumwa-collector-uploads:
    driver: local
  mutumwa-collector-tmp:
    driver: local